Forutsetninger: *nix eller OSX eller cygwin (annet som gir linux-ish konsoll)
Ved deling av script: husk line endings i Windows kan være annerledes enn
*nix/OSX

Slides: 
    - hva forutsetter vi for denne øvelsen (se over)
    - hvordan virker skallet generelt sett (kommando --> enter --> tolkes -->
      eksekveres der og da)
    - hva er kommandoer? (små programmer) 
    - hvordan er syntax for bruk av kommandoer generelt sett? 
    - vanlige argumenter/parametre
    - pipe
    - vise script
    - henvise til fil med eksempler 

Some useful tools and a short intro to what they do: 
1) Navigation
    - ls : what's in this directory? 
    - pwd : where am I standing in the file system?
    - cd : take me to indicated directory
    - find : find a file from given directory in the file tree 

2) Getting an overview:
    - history : show me the commands I've run
	- tail  : read me the last lines of a file 
	- head : read me the first lines of a file 
	- less : non-editable view of a file 
	- cat : list contents of a file to standard out 
    - grep : search for a given expression

3) Files and directories:
    - mkdir : make a directory
    lag en katalog
    - cp : copy a file or directory
    - mv : move a file or directory 
    - rm : delete a file or directory
    - chmod : change file permissions 
    - touch : change last-modified timestamp of a file without editing it

4) Editing: 
    - vim/vi : shell editor with command mode and insert mode
    - sed : regular expressions (change occurences of patterns)
    - awk : editing columns of text or numbers

5) Scripting basics
    - echo : print to screen (think System.out.println)
    - pipe | send the output (pipe the output) to the next command
    - > and < : redirecting input and output streams
    - for 
    - if
    - variables

6) Remote
    - ssh : securely log in to a remote box
    - scp : send files from one box to another with ssh 
    - rsync : synchronise files locally or remote

7) How do I get help? 
    - google is, as always, your friend
    - man <command> 

8) Nice to know about systems: 
    - PATH : Your OS will search for executables in these locations (such as
      java, python and anything you might install yourself)
    - environment variables
    - dot-files : hidden files , e.g. .bashrc
    - sudo : perform tasks as super user (with great power comes great
      responsibility)

9) Scripting: 
    - #! (shebang)
    - file permissions and file ownership
	- ssh 
    - combining commands
    - find and grep 
    - grep, sed, awk
    - for loops



Exercise 1: basics
- List the contents of the directory you are currently standing in
- List the current working directory
- List the hidden files (if any) in your directory
- Find the java executable on your system 

Exercise 2: 
- Do some basic shell scripting, like using for loops, conditionals, grep. 

Exercise 3: Set up your own .vimrc
- Figure out how to automatically turn on syntax highlighting
- Automatically convert tabs to spaces
- make an alias so that :WQ behaves like :wq 


Exercise 4: working remote 
We've set up a box on the amazon cloud that you can use for this exercise. 
In this exercise you should: 
- ssh into the box using the login information given in the workshop
- list the contents of the directory
- list the path to the directory you are currently in
- download the right file (can you pick it out?) using scp or rsync
- if you have time, use ssh to execute a command on the box that generates a
  file named after you, e.g. siv.txt
