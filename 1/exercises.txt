Exercise 1: Basics of the shell
- List the contents of the directory you are currently standing in
- Print the path to the current working directory
- List the hidden files (if any) in a directory
- List all java files in a directory with human-readable size references ordered
  by the last-modified date
- Find your java executable
- Use a for loop to print out the first few lines of each file in a directory
- Try to do the previous task both as a script and as a one-liner in the shell
- Make a variable containing the name of a directory. Make a test that checks
  whether the name is a directory or a regular file. Print out the line "This is
  a directory" if the variable names a directory. Try to print out the name of
  the directory using the variable so that the line reads "commandLineTips.txt
  is not a directory"
- List out files in /var/log/ and listen to the tail end of the most recently
  used log file. This means that any new messages should appear in your
  terminal. How do you exit from this command? 


Exercise 2: Set up your own .vimrc and try out vi or vim
- Open vi or vim 
- Add some text to the file
- Save the file
- Turn on syntax highlighting
- Close vim
- Make your own .vimrc file by editing it in vim. You should include syntax
  highlighting and convert tabs to spaces
- make an alias so that WQ and Wq behaves like wq 


Exercise 3: Searching and editing
- Download this directory from github (Zip archive can be downloaded from the
  page, or figure out how to download all the files in the shell) 
  https://github.com/douglascrockford/JSON-java
- Try to extract all the lines that define functions from the code files. Can
  you exclude class names?
- Make a script that recursively finds all the java files below the directory
  you're in. For each file, it should extract the function names and put the
  result into a new file (all the function names from all files into one file)
- Make your bash script directly executable so that you only have to type
  "./myScript.sh" rather than "bash myscript.sh"
More advanced: 
- Try to remove everything but the function names from each line. Example: 
    public void removePrefixOfFunctionName(String line) {
  would become 
removePrefixOfFunctionName(String line)
  or even just
removePrefixOfFunctionName


Exercise 4: working remote 
We've set up a box on the amazon cloud that you can use for this exercise. 
In this exercise you should: 
- ssh into the box using the login information given in the workshop
- list the contents of the directory
- list the path to the directory you are currently in
- download the right file (can you pick it out?) using scp or rsync
- if you have time, use ssh to execute a command on the box that generates a
  file named after you, e.g. siv.txt
- download the file containing these exercises from github by using its URL
